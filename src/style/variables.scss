$primary: #789262 !default;
$secondary: #93ad7d !default;

$white: #fff !default;
$black: #333 !default;
$deepgrey: #666 !default;
$grey: #999 !default;
$red: #ff0000 !default;
$orange: #eb7b17 !default;
$blue: #177cb0 !default;

$bg: #fafafa !default;
$border: #f2f2f2 !default;

// setImg(xxx.png);
@function setImg($path) {
  @return $src + $path;
}

//@include shadow;
@mixin shadow {
  box-shadow: 0 0 20px 0 rgba(28, 47, 119, 0.07);
}

//@include colorFactory($name, $color);
@mixin colorFactory($name, $color) {
  .#{$name} {
    background-color: $color !important;
  }
  .t-#{$name} {
    color: $color !important;
  }
}

// $directionMaps: (top, left, bottom, right) 4个方向
// $color: 边框的颜色, 默认#ccc
// $radius: 圆角半径, 默认0
// $position: 指定使用:after还是:before, 默认after
// @include thinBorder((top,left));
@mixin thinBorder(
  $directionMaps: bottom,
  $color: $border,
  $radius: (
    0,
    0,
    0,
    0
  ),
  $position: after
) {
  // 是否只有一个方向
  $isOnlyOneDir: string==type-of($directionMaps);

  @if ($isOnlyOneDir) {
    $directionMaps: ($directionMaps);
  }

  @each $directionMap in $directionMaps {
    border-#{$directionMap}: 1px solid $color;
  }

  // 判断圆角是list还是number
  @if (list==type-of($radius)) {
    border-radius: nth($radius, 1)
      nth($radius, 2)
      nth($radius, 3)
      nth($radius, 4);
  } @else {
    border-radius: $radius;
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 2) {
    & {
      position: relative;

      // 删除1像素密度比下的边框
      @each $directionMap in $directionMaps {
        border-#{$directionMap}: none;
      }
    }

    &:#{$position} {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      width: 200%;
      height: 200%;
      transform: scale(0.5);
      box-sizing: border-box;
      padding: 1px;
      transform-origin: 0 0;
      pointer-events: none;
      border: 0 solid $color;

      @each $directionMap in $directionMaps {
        border-#{$directionMap}-width: 1px;
      }

      // 判断圆角是list还是number
      @if (list==type-of($radius)) {
        border-radius: nth($radius, 1) *
          2
          nth($radius, 2) *
          2
          nth($radius, 3) *
          2
          nth($radius, 4) *
          2;
      } @else {
        border-radius: $radius * 2;
      }
    }
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 3) {
    &:#{$position} {
      // 判断圆角是list还是number
      @if (list==type-of($radius)) {
        border-radius: nth($radius, 1) *
          3
          nth($radius, 2) *
          3
          nth($radius, 3) *
          3
          nth($radius, 4) *
          3;
      } @else {
        border-radius: $radius * 3;
      }

      width: 300%;
      height: 300%;
      transform: scale(0.33);
    }
  }
}
